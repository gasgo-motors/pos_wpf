//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BusinessLayer.POSMng {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="POSMng_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/POSMng")]
    public partial class POSMng : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCustomerFinDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallCustomerFinDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesPersFinDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesPersFinDetails1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CallSalesPersFinDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSalesHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSalesLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePaySchedLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePaymentLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustVendPaymentLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWhsShipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateItemCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseSalesOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReopenSalesOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSalesOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewCustomerNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcItemInventoryByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemInventoryByLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustItemLikeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePOSMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderWaybillUploadedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewDeviceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public POSMng() {
            this.Url = global::BusinessLayer.Properties.Settings.Default.BusinessLayer_POSMng_POSMng;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCustomerFinDetailsCompletedEventHandler GetCustomerFinDetailsCompleted;
        
        /// <remarks/>
        public event CallCustomerFinDetailsCompletedEventHandler CallCustomerFinDetailsCompleted;
        
        /// <remarks/>
        public event GetSalesPersFinDetailsCompletedEventHandler GetSalesPersFinDetailsCompleted;
        
        /// <remarks/>
        public event GetSalesPersFinDetails1CompletedEventHandler GetSalesPersFinDetails1Completed;
        
        /// <remarks/>
        public event CallSalesPersFinDetailsCompletedEventHandler CallSalesPersFinDetailsCompleted;
        
        /// <remarks/>
        public event CreateSalesHeaderCompletedEventHandler CreateSalesHeaderCompleted;
        
        /// <remarks/>
        public event CreateSalesLineCompletedEventHandler CreateSalesLineCompleted;
        
        /// <remarks/>
        public event CreatePaySchedLineCompletedEventHandler CreatePaySchedLineCompleted;
        
        /// <remarks/>
        public event CreatePaymentLineCompletedEventHandler CreatePaymentLineCompleted;
        
        /// <remarks/>
        public event CreateCustVendPaymentLineCompletedEventHandler CreateCustVendPaymentLineCompleted;
        
        /// <remarks/>
        public event CreateWhsShipmentCompletedEventHandler CreateWhsShipmentCompleted;
        
        /// <remarks/>
        public event CreateItemCommentCompletedEventHandler CreateItemCommentCompleted;
        
        /// <remarks/>
        public event ReleaseSalesOrderCompletedEventHandler ReleaseSalesOrderCompleted;
        
        /// <remarks/>
        public event ReopenSalesOrderCompletedEventHandler ReopenSalesOrderCompleted;
        
        /// <remarks/>
        public event DeleteSalesOrderCompletedEventHandler DeleteSalesOrderCompleted;
        
        /// <remarks/>
        public event CreateNewCustomerCompletedEventHandler CreateNewCustomerCompleted;
        
        /// <remarks/>
        public event CreateNewCustomerNewCompletedEventHandler CreateNewCustomerNewCompleted;
        
        /// <remarks/>
        public event CalcItemInventoryByLocationCompletedEventHandler CalcItemInventoryByLocationCompleted;
        
        /// <remarks/>
        public event GetItemInventoryByLocationsCompletedEventHandler GetItemInventoryByLocationsCompleted;
        
        /// <remarks/>
        public event CreateCustItemLikeCompletedEventHandler CreateCustItemLikeCompleted;
        
        /// <remarks/>
        public event CreatePOSMessageCompletedEventHandler CreatePOSMessageCompleted;
        
        /// <remarks/>
        public event OrderWaybillUploadedCompletedEventHandler OrderWaybillUploadedCompleted;
        
        /// <remarks/>
        public event CreateNewDeviceCompletedEventHandler CreateNewDeviceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:GetCustomerFinDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="GetCustomerFinDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetCustomerFinDetails(string customerNo, ref decimal balanceAmount, ref decimal salesBudgetAmount, ref decimal salesActualAmount, ref decimal recommendedSalesAmount, ref int recommendedVisitsMonth, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFilter) {
            object[] results = this.Invoke("GetCustomerFinDetails", new object[] {
                        customerNo,
                        balanceAmount,
                        salesBudgetAmount,
                        salesActualAmount,
                        recommendedSalesAmount,
                        recommendedVisitsMonth,
                        dateFilter});
            balanceAmount = ((decimal)(results[0]));
            salesBudgetAmount = ((decimal)(results[1]));
            salesActualAmount = ((decimal)(results[2]));
            recommendedSalesAmount = ((decimal)(results[3]));
            recommendedVisitsMonth = ((int)(results[4]));
        }
        
        /// <remarks/>
        public void GetCustomerFinDetailsAsync(string customerNo, decimal balanceAmount, decimal salesBudgetAmount, decimal salesActualAmount, decimal recommendedSalesAmount, int recommendedVisitsMonth, System.DateTime dateFilter) {
            this.GetCustomerFinDetailsAsync(customerNo, balanceAmount, salesBudgetAmount, salesActualAmount, recommendedSalesAmount, recommendedVisitsMonth, dateFilter, null);
        }
        
        /// <remarks/>
        public void GetCustomerFinDetailsAsync(string customerNo, decimal balanceAmount, decimal salesBudgetAmount, decimal salesActualAmount, decimal recommendedSalesAmount, int recommendedVisitsMonth, System.DateTime dateFilter, object userState) {
            if ((this.GetCustomerFinDetailsOperationCompleted == null)) {
                this.GetCustomerFinDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerFinDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCustomerFinDetails", new object[] {
                        customerNo,
                        balanceAmount,
                        salesBudgetAmount,
                        salesActualAmount,
                        recommendedSalesAmount,
                        recommendedVisitsMonth,
                        dateFilter}, this.GetCustomerFinDetailsOperationCompleted, userState);
        }
        
        private void OnGetCustomerFinDetailsOperationCompleted(object arg) {
            if ((this.GetCustomerFinDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerFinDetailsCompleted(this, new GetCustomerFinDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CallCustomerFinDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CallCustomerFinDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CallCustomerFinDetails(string customerNo) {
            this.Invoke("CallCustomerFinDetails", new object[] {
                        customerNo});
        }
        
        /// <remarks/>
        public void CallCustomerFinDetailsAsync(string customerNo) {
            this.CallCustomerFinDetailsAsync(customerNo, null);
        }
        
        /// <remarks/>
        public void CallCustomerFinDetailsAsync(string customerNo, object userState) {
            if ((this.CallCustomerFinDetailsOperationCompleted == null)) {
                this.CallCustomerFinDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallCustomerFinDetailsOperationCompleted);
            }
            this.InvokeAsync("CallCustomerFinDetails", new object[] {
                        customerNo}, this.CallCustomerFinDetailsOperationCompleted, userState);
        }
        
        private void OnCallCustomerFinDetailsOperationCompleted(object arg) {
            if ((this.CallCustomerFinDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallCustomerFinDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:GetSalesPersFinDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="GetSalesPersFinDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSalesPersFinDetails(string salesPersNo, string regionNo, ref decimal salesBudgetAmount, ref decimal salesActualAmount, ref string regionName, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFilter) {
            object[] results = this.Invoke("GetSalesPersFinDetails", new object[] {
                        salesPersNo,
                        regionNo,
                        salesBudgetAmount,
                        salesActualAmount,
                        regionName,
                        dateFilter});
            salesBudgetAmount = ((decimal)(results[0]));
            salesActualAmount = ((decimal)(results[1]));
            regionName = ((string)(results[2]));
        }
        
        /// <remarks/>
        public void GetSalesPersFinDetailsAsync(string salesPersNo, string regionNo, decimal salesBudgetAmount, decimal salesActualAmount, string regionName, System.DateTime dateFilter) {
            this.GetSalesPersFinDetailsAsync(salesPersNo, regionNo, salesBudgetAmount, salesActualAmount, regionName, dateFilter, null);
        }
        
        /// <remarks/>
        public void GetSalesPersFinDetailsAsync(string salesPersNo, string regionNo, decimal salesBudgetAmount, decimal salesActualAmount, string regionName, System.DateTime dateFilter, object userState) {
            if ((this.GetSalesPersFinDetailsOperationCompleted == null)) {
                this.GetSalesPersFinDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesPersFinDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSalesPersFinDetails", new object[] {
                        salesPersNo,
                        regionNo,
                        salesBudgetAmount,
                        salesActualAmount,
                        regionName,
                        dateFilter}, this.GetSalesPersFinDetailsOperationCompleted, userState);
        }
        
        private void OnGetSalesPersFinDetailsOperationCompleted(object arg) {
            if ((this.GetSalesPersFinDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesPersFinDetailsCompleted(this, new GetSalesPersFinDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:GetSalesPersFinDetails1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="GetSalesPersFinDetails1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSalesPersFinDetails1(string salesPersNo, ref decimal salesBudgetAmount, ref decimal salesActualAmount, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFilter) {
            object[] results = this.Invoke("GetSalesPersFinDetails1", new object[] {
                        salesPersNo,
                        salesBudgetAmount,
                        salesActualAmount,
                        dateFilter});
            salesBudgetAmount = ((decimal)(results[0]));
            salesActualAmount = ((decimal)(results[1]));
        }
        
        /// <remarks/>
        public void GetSalesPersFinDetails1Async(string salesPersNo, decimal salesBudgetAmount, decimal salesActualAmount, System.DateTime dateFilter) {
            this.GetSalesPersFinDetails1Async(salesPersNo, salesBudgetAmount, salesActualAmount, dateFilter, null);
        }
        
        /// <remarks/>
        public void GetSalesPersFinDetails1Async(string salesPersNo, decimal salesBudgetAmount, decimal salesActualAmount, System.DateTime dateFilter, object userState) {
            if ((this.GetSalesPersFinDetails1OperationCompleted == null)) {
                this.GetSalesPersFinDetails1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesPersFinDetails1OperationCompleted);
            }
            this.InvokeAsync("GetSalesPersFinDetails1", new object[] {
                        salesPersNo,
                        salesBudgetAmount,
                        salesActualAmount,
                        dateFilter}, this.GetSalesPersFinDetails1OperationCompleted, userState);
        }
        
        private void OnGetSalesPersFinDetails1OperationCompleted(object arg) {
            if ((this.GetSalesPersFinDetails1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesPersFinDetails1Completed(this, new GetSalesPersFinDetails1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CallSalesPersFinDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CallSalesPersFinDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CallSalesPersFinDetails() {
            this.Invoke("CallSalesPersFinDetails", new object[0]);
        }
        
        /// <remarks/>
        public void CallSalesPersFinDetailsAsync() {
            this.CallSalesPersFinDetailsAsync(null);
        }
        
        /// <remarks/>
        public void CallSalesPersFinDetailsAsync(object userState) {
            if ((this.CallSalesPersFinDetailsOperationCompleted == null)) {
                this.CallSalesPersFinDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallSalesPersFinDetailsOperationCompleted);
            }
            this.InvokeAsync("CallSalesPersFinDetails", new object[0], this.CallSalesPersFinDetailsOperationCompleted, userState);
        }
        
        private void OnCallSalesPersFinDetailsOperationCompleted(object arg) {
            if ((this.CallSalesPersFinDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallSalesPersFinDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreateSalesHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreateSalesHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateSalesHeader(string docNo, int docType) {
            object[] results = this.Invoke("CreateSalesHeader", new object[] {
                        docNo,
                        docType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSalesHeaderAsync(string docNo, int docType) {
            this.CreateSalesHeaderAsync(docNo, docType, null);
        }
        
        /// <remarks/>
        public void CreateSalesHeaderAsync(string docNo, int docType, object userState) {
            if ((this.CreateSalesHeaderOperationCompleted == null)) {
                this.CreateSalesHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSalesHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateSalesHeader", new object[] {
                        docNo,
                        docType}, this.CreateSalesHeaderOperationCompleted, userState);
        }
        
        private void OnCreateSalesHeaderOperationCompleted(object arg) {
            if ((this.CreateSalesHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSalesHeaderCompleted(this, new CreateSalesHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreateSalesLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreateSalesLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateSalesLine(int docType, string docNo, int lineNo, int lineType, string accNo, string locationCode, string uOM, decimal unitPrice, decimal qty, decimal lineDisc, decimal lineDiscAmt, System.DateTime orderStartDate, System.DateTime orderClosedDate, string orderDuration) {
            this.Invoke("CreateSalesLine", new object[] {
                        docType,
                        docNo,
                        lineNo,
                        lineType,
                        accNo,
                        locationCode,
                        uOM,
                        unitPrice,
                        qty,
                        lineDisc,
                        lineDiscAmt,
                        orderStartDate,
                        orderClosedDate,
                        orderDuration});
        }
        
        /// <remarks/>
        public void CreateSalesLineAsync(int docType, string docNo, int lineNo, int lineType, string accNo, string locationCode, string uOM, decimal unitPrice, decimal qty, decimal lineDisc, decimal lineDiscAmt, System.DateTime orderStartDate, System.DateTime orderClosedDate, string orderDuration) {
            this.CreateSalesLineAsync(docType, docNo, lineNo, lineType, accNo, locationCode, uOM, unitPrice, qty, lineDisc, lineDiscAmt, orderStartDate, orderClosedDate, orderDuration, null);
        }
        
        /// <remarks/>
        public void CreateSalesLineAsync(int docType, string docNo, int lineNo, int lineType, string accNo, string locationCode, string uOM, decimal unitPrice, decimal qty, decimal lineDisc, decimal lineDiscAmt, System.DateTime orderStartDate, System.DateTime orderClosedDate, string orderDuration, object userState) {
            if ((this.CreateSalesLineOperationCompleted == null)) {
                this.CreateSalesLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSalesLineOperationCompleted);
            }
            this.InvokeAsync("CreateSalesLine", new object[] {
                        docType,
                        docNo,
                        lineNo,
                        lineType,
                        accNo,
                        locationCode,
                        uOM,
                        unitPrice,
                        qty,
                        lineDisc,
                        lineDiscAmt,
                        orderStartDate,
                        orderClosedDate,
                        orderDuration}, this.CreateSalesLineOperationCompleted, userState);
        }
        
        private void OnCreateSalesLineOperationCompleted(object arg) {
            if ((this.CreateSalesLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSalesLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreatePaySchedLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreatePaySchedLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreatePaySchedLine(string custNo, string orderNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dueDate, decimal payAmount) {
            this.Invoke("CreatePaySchedLine", new object[] {
                        custNo,
                        orderNo,
                        dueDate,
                        payAmount});
        }
        
        /// <remarks/>
        public void CreatePaySchedLineAsync(string custNo, string orderNo, System.DateTime dueDate, decimal payAmount) {
            this.CreatePaySchedLineAsync(custNo, orderNo, dueDate, payAmount, null);
        }
        
        /// <remarks/>
        public void CreatePaySchedLineAsync(string custNo, string orderNo, System.DateTime dueDate, decimal payAmount, object userState) {
            if ((this.CreatePaySchedLineOperationCompleted == null)) {
                this.CreatePaySchedLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePaySchedLineOperationCompleted);
            }
            this.InvokeAsync("CreatePaySchedLine", new object[] {
                        custNo,
                        orderNo,
                        dueDate,
                        payAmount}, this.CreatePaySchedLineOperationCompleted, userState);
        }
        
        private void OnCreatePaySchedLineOperationCompleted(object arg) {
            if ((this.CreatePaySchedLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePaySchedLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreatePaymentLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreatePaymentLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreatePaymentLine(int orderType, string orderNo, decimal pay2Amount, string jnlTemplName, string jnlBatchName, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime postingDate, int accountType, string accountNo, int balAccountType, string balAccountNo, string respCenter, string payMethode, string salesPers) {
            this.Invoke("CreatePaymentLine", new object[] {
                        orderType,
                        orderNo,
                        pay2Amount,
                        jnlTemplName,
                        jnlBatchName,
                        postingDate,
                        accountType,
                        accountNo,
                        balAccountType,
                        balAccountNo,
                        respCenter,
                        payMethode,
                        salesPers});
        }
        
        /// <remarks/>
        public void CreatePaymentLineAsync(int orderType, string orderNo, decimal pay2Amount, string jnlTemplName, string jnlBatchName, System.DateTime postingDate, int accountType, string accountNo, int balAccountType, string balAccountNo, string respCenter, string payMethode, string salesPers) {
            this.CreatePaymentLineAsync(orderType, orderNo, pay2Amount, jnlTemplName, jnlBatchName, postingDate, accountType, accountNo, balAccountType, balAccountNo, respCenter, payMethode, salesPers, null);
        }
        
        /// <remarks/>
        public void CreatePaymentLineAsync(int orderType, string orderNo, decimal pay2Amount, string jnlTemplName, string jnlBatchName, System.DateTime postingDate, int accountType, string accountNo, int balAccountType, string balAccountNo, string respCenter, string payMethode, string salesPers, object userState) {
            if ((this.CreatePaymentLineOperationCompleted == null)) {
                this.CreatePaymentLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePaymentLineOperationCompleted);
            }
            this.InvokeAsync("CreatePaymentLine", new object[] {
                        orderType,
                        orderNo,
                        pay2Amount,
                        jnlTemplName,
                        jnlBatchName,
                        postingDate,
                        accountType,
                        accountNo,
                        balAccountType,
                        balAccountNo,
                        respCenter,
                        payMethode,
                        salesPers}, this.CreatePaymentLineOperationCompleted, userState);
        }
        
        private void OnCreatePaymentLineOperationCompleted(object arg) {
            if ((this.CreatePaymentLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePaymentLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreateCustVendPaymentLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreateCustVendPaymentLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateCustVendPaymentLine(int orderType, string orderNo, decimal pay2Amount, string jnlTemplName, string jnlBatchName, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime postingDate, int accountType, string accountNo, int balAccountType, string balAccountNo, string respCenter, string payMethode, string salesPers) {
            this.Invoke("CreateCustVendPaymentLine", new object[] {
                        orderType,
                        orderNo,
                        pay2Amount,
                        jnlTemplName,
                        jnlBatchName,
                        postingDate,
                        accountType,
                        accountNo,
                        balAccountType,
                        balAccountNo,
                        respCenter,
                        payMethode,
                        salesPers});
        }
        
        /// <remarks/>
        public void CreateCustVendPaymentLineAsync(int orderType, string orderNo, decimal pay2Amount, string jnlTemplName, string jnlBatchName, System.DateTime postingDate, int accountType, string accountNo, int balAccountType, string balAccountNo, string respCenter, string payMethode, string salesPers) {
            this.CreateCustVendPaymentLineAsync(orderType, orderNo, pay2Amount, jnlTemplName, jnlBatchName, postingDate, accountType, accountNo, balAccountType, balAccountNo, respCenter, payMethode, salesPers, null);
        }
        
        /// <remarks/>
        public void CreateCustVendPaymentLineAsync(int orderType, string orderNo, decimal pay2Amount, string jnlTemplName, string jnlBatchName, System.DateTime postingDate, int accountType, string accountNo, int balAccountType, string balAccountNo, string respCenter, string payMethode, string salesPers, object userState) {
            if ((this.CreateCustVendPaymentLineOperationCompleted == null)) {
                this.CreateCustVendPaymentLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustVendPaymentLineOperationCompleted);
            }
            this.InvokeAsync("CreateCustVendPaymentLine", new object[] {
                        orderType,
                        orderNo,
                        pay2Amount,
                        jnlTemplName,
                        jnlBatchName,
                        postingDate,
                        accountType,
                        accountNo,
                        balAccountType,
                        balAccountNo,
                        respCenter,
                        payMethode,
                        salesPers}, this.CreateCustVendPaymentLineOperationCompleted, userState);
        }
        
        private void OnCreateCustVendPaymentLineOperationCompleted(object arg) {
            if ((this.CreateCustVendPaymentLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustVendPaymentLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreateWhsShipment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreateWhsShipment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateWhsShipment(int orderType, string orderNo) {
            this.Invoke("CreateWhsShipment", new object[] {
                        orderType,
                        orderNo});
        }
        
        /// <remarks/>
        public void CreateWhsShipmentAsync(int orderType, string orderNo) {
            this.CreateWhsShipmentAsync(orderType, orderNo, null);
        }
        
        /// <remarks/>
        public void CreateWhsShipmentAsync(int orderType, string orderNo, object userState) {
            if ((this.CreateWhsShipmentOperationCompleted == null)) {
                this.CreateWhsShipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWhsShipmentOperationCompleted);
            }
            this.InvokeAsync("CreateWhsShipment", new object[] {
                        orderType,
                        orderNo}, this.CreateWhsShipmentOperationCompleted, userState);
        }
        
        private void OnCreateWhsShipmentOperationCompleted(object arg) {
            if ((this.CreateWhsShipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWhsShipmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreateItemComment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreateItemComment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateItemComment(string itemNo, string commentText, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime commentDate) {
            this.Invoke("CreateItemComment", new object[] {
                        itemNo,
                        commentText,
                        commentDate});
        }
        
        /// <remarks/>
        public void CreateItemCommentAsync(string itemNo, string commentText, System.DateTime commentDate) {
            this.CreateItemCommentAsync(itemNo, commentText, commentDate, null);
        }
        
        /// <remarks/>
        public void CreateItemCommentAsync(string itemNo, string commentText, System.DateTime commentDate, object userState) {
            if ((this.CreateItemCommentOperationCompleted == null)) {
                this.CreateItemCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateItemCommentOperationCompleted);
            }
            this.InvokeAsync("CreateItemComment", new object[] {
                        itemNo,
                        commentText,
                        commentDate}, this.CreateItemCommentOperationCompleted, userState);
        }
        
        private void OnCreateItemCommentOperationCompleted(object arg) {
            if ((this.CreateItemCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateItemCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:ReleaseSalesOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="ReleaseSalesOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseSalesOrder(int docType, string docNo) {
            this.Invoke("ReleaseSalesOrder", new object[] {
                        docType,
                        docNo});
        }
        
        /// <remarks/>
        public void ReleaseSalesOrderAsync(int docType, string docNo) {
            this.ReleaseSalesOrderAsync(docType, docNo, null);
        }
        
        /// <remarks/>
        public void ReleaseSalesOrderAsync(int docType, string docNo, object userState) {
            if ((this.ReleaseSalesOrderOperationCompleted == null)) {
                this.ReleaseSalesOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseSalesOrderOperationCompleted);
            }
            this.InvokeAsync("ReleaseSalesOrder", new object[] {
                        docType,
                        docNo}, this.ReleaseSalesOrderOperationCompleted, userState);
        }
        
        private void OnReleaseSalesOrderOperationCompleted(object arg) {
            if ((this.ReleaseSalesOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseSalesOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:ReopenSalesOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="ReopenSalesOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReopenSalesOrder(int docType, string docNo) {
            this.Invoke("ReopenSalesOrder", new object[] {
                        docType,
                        docNo});
        }
        
        /// <remarks/>
        public void ReopenSalesOrderAsync(int docType, string docNo) {
            this.ReopenSalesOrderAsync(docType, docNo, null);
        }
        
        /// <remarks/>
        public void ReopenSalesOrderAsync(int docType, string docNo, object userState) {
            if ((this.ReopenSalesOrderOperationCompleted == null)) {
                this.ReopenSalesOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReopenSalesOrderOperationCompleted);
            }
            this.InvokeAsync("ReopenSalesOrder", new object[] {
                        docType,
                        docNo}, this.ReopenSalesOrderOperationCompleted, userState);
        }
        
        private void OnReopenSalesOrderOperationCompleted(object arg) {
            if ((this.ReopenSalesOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReopenSalesOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:DeleteSalesOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="DeleteSalesOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSalesOrder(int docType, string docNo) {
            this.Invoke("DeleteSalesOrder", new object[] {
                        docType,
                        docNo});
        }
        
        /// <remarks/>
        public void DeleteSalesOrderAsync(int docType, string docNo) {
            this.DeleteSalesOrderAsync(docType, docNo, null);
        }
        
        /// <remarks/>
        public void DeleteSalesOrderAsync(int docType, string docNo, object userState) {
            if ((this.DeleteSalesOrderOperationCompleted == null)) {
                this.DeleteSalesOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSalesOrderOperationCompleted);
            }
            this.InvokeAsync("DeleteSalesOrder", new object[] {
                        docType,
                        docNo}, this.DeleteSalesOrderOperationCompleted, userState);
        }
        
        private void OnDeleteSalesOrderOperationCompleted(object arg) {
            if ((this.DeleteSalesOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSalesOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreateNewCustomer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreateNewCustomer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewCustomer(string name, string vATRegNo, bool vATPayer, string contactName, string phoneNo, string primaryAddress, string ship2Address, string city, string country, string salesPersonCode) {
            object[] results = this.Invoke("CreateNewCustomer", new object[] {
                        name,
                        vATRegNo,
                        vATPayer,
                        contactName,
                        phoneNo,
                        primaryAddress,
                        ship2Address,
                        city,
                        country,
                        salesPersonCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewCustomerAsync(string name, string vATRegNo, bool vATPayer, string contactName, string phoneNo, string primaryAddress, string ship2Address, string city, string country, string salesPersonCode) {
            this.CreateNewCustomerAsync(name, vATRegNo, vATPayer, contactName, phoneNo, primaryAddress, ship2Address, city, country, salesPersonCode, null);
        }
        
        /// <remarks/>
        public void CreateNewCustomerAsync(string name, string vATRegNo, bool vATPayer, string contactName, string phoneNo, string primaryAddress, string ship2Address, string city, string country, string salesPersonCode, object userState) {
            if ((this.CreateNewCustomerOperationCompleted == null)) {
                this.CreateNewCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateNewCustomer", new object[] {
                        name,
                        vATRegNo,
                        vATPayer,
                        contactName,
                        phoneNo,
                        primaryAddress,
                        ship2Address,
                        city,
                        country,
                        salesPersonCode}, this.CreateNewCustomerOperationCompleted, userState);
        }
        
        private void OnCreateNewCustomerOperationCompleted(object arg) {
            if ((this.CreateNewCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewCustomerCompleted(this, new CreateNewCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreateNewCustomerNew", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreateNewCustomerNew_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewCustomerNew(string name, string vATRegNo, bool vATPayer, string contactName, string phoneNo, string primaryAddress, string ship2Address, string city, string country, string salesPersonCode, string postCode, string mobileNumber, string areaCode) {
            object[] results = this.Invoke("CreateNewCustomerNew", new object[] {
                        name,
                        vATRegNo,
                        vATPayer,
                        contactName,
                        phoneNo,
                        primaryAddress,
                        ship2Address,
                        city,
                        country,
                        salesPersonCode,
                        postCode,
                        mobileNumber,
                        areaCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewCustomerNewAsync(string name, string vATRegNo, bool vATPayer, string contactName, string phoneNo, string primaryAddress, string ship2Address, string city, string country, string salesPersonCode, string postCode, string mobileNumber, string areaCode) {
            this.CreateNewCustomerNewAsync(name, vATRegNo, vATPayer, contactName, phoneNo, primaryAddress, ship2Address, city, country, salesPersonCode, postCode, mobileNumber, areaCode, null);
        }
        
        /// <remarks/>
        public void CreateNewCustomerNewAsync(string name, string vATRegNo, bool vATPayer, string contactName, string phoneNo, string primaryAddress, string ship2Address, string city, string country, string salesPersonCode, string postCode, string mobileNumber, string areaCode, object userState) {
            if ((this.CreateNewCustomerNewOperationCompleted == null)) {
                this.CreateNewCustomerNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewCustomerNewOperationCompleted);
            }
            this.InvokeAsync("CreateNewCustomerNew", new object[] {
                        name,
                        vATRegNo,
                        vATPayer,
                        contactName,
                        phoneNo,
                        primaryAddress,
                        ship2Address,
                        city,
                        country,
                        salesPersonCode,
                        postCode,
                        mobileNumber,
                        areaCode}, this.CreateNewCustomerNewOperationCompleted, userState);
        }
        
        private void OnCreateNewCustomerNewOperationCompleted(object arg) {
            if ((this.CreateNewCustomerNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewCustomerNewCompleted(this, new CreateNewCustomerNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CalcItemInventoryByLocation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CalcItemInventoryByLocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal CalcItemInventoryByLocation(string itemNo, string locationCode) {
            object[] results = this.Invoke("CalcItemInventoryByLocation", new object[] {
                        itemNo,
                        locationCode});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalcItemInventoryByLocationAsync(string itemNo, string locationCode) {
            this.CalcItemInventoryByLocationAsync(itemNo, locationCode, null);
        }
        
        /// <remarks/>
        public void CalcItemInventoryByLocationAsync(string itemNo, string locationCode, object userState) {
            if ((this.CalcItemInventoryByLocationOperationCompleted == null)) {
                this.CalcItemInventoryByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcItemInventoryByLocationOperationCompleted);
            }
            this.InvokeAsync("CalcItemInventoryByLocation", new object[] {
                        itemNo,
                        locationCode}, this.CalcItemInventoryByLocationOperationCompleted, userState);
        }
        
        private void OnCalcItemInventoryByLocationOperationCompleted(object arg) {
            if ((this.CalcItemInventoryByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcItemInventoryByLocationCompleted(this, new CalcItemInventoryByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:GetItemInventoryByLocations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="GetItemInventoryByLocations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetItemInventoryByLocations(string itemNo) {
            object[] results = this.Invoke("GetItemInventoryByLocations", new object[] {
                        itemNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemInventoryByLocationsAsync(string itemNo) {
            this.GetItemInventoryByLocationsAsync(itemNo, null);
        }
        
        /// <remarks/>
        public void GetItemInventoryByLocationsAsync(string itemNo, object userState) {
            if ((this.GetItemInventoryByLocationsOperationCompleted == null)) {
                this.GetItemInventoryByLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemInventoryByLocationsOperationCompleted);
            }
            this.InvokeAsync("GetItemInventoryByLocations", new object[] {
                        itemNo}, this.GetItemInventoryByLocationsOperationCompleted, userState);
        }
        
        private void OnGetItemInventoryByLocationsOperationCompleted(object arg) {
            if ((this.GetItemInventoryByLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemInventoryByLocationsCompleted(this, new GetItemInventoryByLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreateCustItemLike", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreateCustItemLike_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateCustItemLike(string custNo, string itemNo, bool custLike) {
            this.Invoke("CreateCustItemLike", new object[] {
                        custNo,
                        itemNo,
                        custLike});
        }
        
        /// <remarks/>
        public void CreateCustItemLikeAsync(string custNo, string itemNo, bool custLike) {
            this.CreateCustItemLikeAsync(custNo, itemNo, custLike, null);
        }
        
        /// <remarks/>
        public void CreateCustItemLikeAsync(string custNo, string itemNo, bool custLike, object userState) {
            if ((this.CreateCustItemLikeOperationCompleted == null)) {
                this.CreateCustItemLikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustItemLikeOperationCompleted);
            }
            this.InvokeAsync("CreateCustItemLike", new object[] {
                        custNo,
                        itemNo,
                        custLike}, this.CreateCustItemLikeOperationCompleted, userState);
        }
        
        private void OnCreateCustItemLikeOperationCompleted(object arg) {
            if ((this.CreateCustItemLikeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustItemLikeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreatePOSMessage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreatePOSMessage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePOSMessage(string senderIDP, string receiverIDP, string messageTextP) {
            object[] results = this.Invoke("CreatePOSMessage", new object[] {
                        senderIDP,
                        receiverIDP,
                        messageTextP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePOSMessageAsync(string senderIDP, string receiverIDP, string messageTextP) {
            this.CreatePOSMessageAsync(senderIDP, receiverIDP, messageTextP, null);
        }
        
        /// <remarks/>
        public void CreatePOSMessageAsync(string senderIDP, string receiverIDP, string messageTextP, object userState) {
            if ((this.CreatePOSMessageOperationCompleted == null)) {
                this.CreatePOSMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePOSMessageOperationCompleted);
            }
            this.InvokeAsync("CreatePOSMessage", new object[] {
                        senderIDP,
                        receiverIDP,
                        messageTextP}, this.CreatePOSMessageOperationCompleted, userState);
        }
        
        private void OnCreatePOSMessageOperationCompleted(object arg) {
            if ((this.CreatePOSMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePOSMessageCompleted(this, new CreatePOSMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:OrderWaybillUploaded", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="OrderWaybillUploaded_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool OrderWaybillUploaded(int orderType, string orderNo) {
            object[] results = this.Invoke("OrderWaybillUploaded", new object[] {
                        orderType,
                        orderNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OrderWaybillUploadedAsync(int orderType, string orderNo) {
            this.OrderWaybillUploadedAsync(orderType, orderNo, null);
        }
        
        /// <remarks/>
        public void OrderWaybillUploadedAsync(int orderType, string orderNo, object userState) {
            if ((this.OrderWaybillUploadedOperationCompleted == null)) {
                this.OrderWaybillUploadedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderWaybillUploadedOperationCompleted);
            }
            this.InvokeAsync("OrderWaybillUploaded", new object[] {
                        orderType,
                        orderNo}, this.OrderWaybillUploadedOperationCompleted, userState);
        }
        
        private void OnOrderWaybillUploadedOperationCompleted(object arg) {
            if ((this.OrderWaybillUploadedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderWaybillUploadedCompleted(this, new OrderWaybillUploadedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/POSMng:CreateNewDevice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", ResponseElementName="CreateNewDevice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/POSMng", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateNewDevice(string deviceId) {
            this.Invoke("CreateNewDevice", new object[] {
                        deviceId});
        }
        
        /// <remarks/>
        public void CreateNewDeviceAsync(string deviceId) {
            this.CreateNewDeviceAsync(deviceId, null);
        }
        
        /// <remarks/>
        public void CreateNewDeviceAsync(string deviceId, object userState) {
            if ((this.CreateNewDeviceOperationCompleted == null)) {
                this.CreateNewDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewDeviceOperationCompleted);
            }
            this.InvokeAsync("CreateNewDevice", new object[] {
                        deviceId}, this.CreateNewDeviceOperationCompleted, userState);
        }
        
        private void OnCreateNewDeviceOperationCompleted(object arg) {
            if ((this.CreateNewDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewDeviceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerFinDetailsCompletedEventHandler(object sender, GetCustomerFinDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerFinDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerFinDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal balanceAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal salesBudgetAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal salesActualAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal recommendedSalesAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public int recommendedVisitsMonth {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CallCustomerFinDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSalesPersFinDetailsCompletedEventHandler(object sender, GetSalesPersFinDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesPersFinDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesPersFinDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal salesBudgetAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal salesActualAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string regionName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSalesPersFinDetails1CompletedEventHandler(object sender, GetSalesPersFinDetails1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesPersFinDetails1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesPersFinDetails1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal salesBudgetAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal salesActualAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CallSalesPersFinDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateSalesHeaderCompletedEventHandler(object sender, CreateSalesHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSalesHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSalesHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateSalesLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreatePaySchedLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreatePaymentLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateCustVendPaymentLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateWhsShipmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateItemCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReleaseSalesOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReopenSalesOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteSalesOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateNewCustomerCompletedEventHandler(object sender, CreateNewCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateNewCustomerNewCompletedEventHandler(object sender, CreateNewCustomerNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewCustomerNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewCustomerNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CalcItemInventoryByLocationCompletedEventHandler(object sender, CalcItemInventoryByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcItemInventoryByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcItemInventoryByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetItemInventoryByLocationsCompletedEventHandler(object sender, GetItemInventoryByLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemInventoryByLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemInventoryByLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateCustItemLikeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreatePOSMessageCompletedEventHandler(object sender, CreatePOSMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePOSMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePOSMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OrderWaybillUploadedCompletedEventHandler(object sender, OrderWaybillUploadedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderWaybillUploadedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderWaybillUploadedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateNewDeviceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591